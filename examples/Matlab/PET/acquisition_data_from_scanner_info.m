function acquisition_data_from_scanner_info(engine)
% A demo showing basics of PET acquisition data handling.

% CCP PETMR Synergistic Image Reconstruction Framework (SIRF).
% Copyright 2015 - 2017 Rutherford Appleton Laboratory STFC.
% Copyright 2015 - 2017 University College London.
% 
% This is software developed for the Collaborative Computational
% Project in Positron Emission Tomography and Magnetic Resonance imaging
% (http://www.ccppetmr.ac.uk/).
% 
% Licensed under the Apache License, Version 2.0 (the "License");
% you may not use this file except in compliance with the License.
% You may obtain a copy of the License at
% http://www.apache.org/licenses/LICENSE-2.0
% Unless required by applicable law or agreed to in writing, software
% distributed under the License is distributed on an "AS IS" BASIS,
% WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
% See the License for the specific language governing permissions and
% limitations under the License.

if nargin < 1
    engine = [];
end
import_str = set_up_PET(engine);
eval(import_str)

% all acquisition data generated by this script will be stored in memory
% (the input data remain in the input file);
% default storage scheme 'file' keeps all acquisition data generated by
% the script in scratch files deleted after the script terminates
scheme = AcquisitionData.get_storage_scheme();
AcquisitionData.set_storage_scheme('memory');

try
    % create acquisition data from scanner parameters
    acq_data = AcquisitionData('Siemens_mMR');
    % set all values to 1.0
    acq_data.fill(1.0);

    % copy the acquisition data into a Python array
    acq_array = acq_data.as_array();
    acq_dim = size(acq_array);
    fprintf('acquisition data dimensions: %d x %d x %d\n', acq_dim)

    % display the acquisition data
    z = acq_dim(3)/2;
    mUtilities.show_2D_array(acq_array(:,:,z), ...
        'acquisition data', 'tang. pos.', 'views');
    
    % write the acquisition data to a file
    acq_data.write('units')

catch err
    % display error information
    fprintf('??? %s\n', err.message)
    fprintf('error id is %s\n', err.identifier)
end
AcquisitionData.set_storage_scheme(scheme);
